[{"C:\\Projects\\music-library\\src\\index.tsx":"1","C:\\Projects\\music-library\\src\\reportWebVitals.ts":"2","C:\\Projects\\music-library\\src\\App.tsx":"3","C:\\Projects\\music-library\\src\\store\\store.ts":"4","C:\\Projects\\music-library\\src\\store\\topTracksListReducer.ts":"5","C:\\Projects\\music-library\\src\\API\\API.ts":"6","C:\\Projects\\music-library\\src\\components\\TopTracksList\\TopTracksList.tsx":"7"},{"size":643,"mtime":1607249067636,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":257,"mtime":1607249745968,"results":"11","hashOfConfig":"9"},{"size":564,"mtime":1607248963178,"results":"12","hashOfConfig":"9"},{"size":2376,"mtime":1607251407856,"results":"13","hashOfConfig":"9"},{"size":985,"mtime":1607250542313,"results":"14","hashOfConfig":"9"},{"size":1850,"mtime":1607250636748,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1p2olr6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"C:\\Projects\\music-library\\src\\index.tsx",[],["32","33"],"C:\\Projects\\music-library\\src\\reportWebVitals.ts",[],"C:\\Projects\\music-library\\src\\App.tsx",[],"C:\\Projects\\music-library\\src\\store\\store.ts",[],"C:\\Projects\\music-library\\src\\store\\topTracksListReducer.ts",[],"C:\\Projects\\music-library\\src\\API\\API.ts",[],"C:\\Projects\\music-library\\src\\components\\TopTracksList\\TopTracksList.tsx",["34","35","36"],"import React, { memo, useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport { requestMoreTopTracks, requestTopTracks } from '../../store/topTracksListReducer';\r\n\r\nconst TopTracksList: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    let topTracks = useSelector((state: RootState) => state.topTracksList.tracks)\r\n    let nexPageTopTracksList = useSelector((state: RootState) => state.topTracksList.nextPage)\r\n    let isLoading = useSelector((state: RootState) => state.topTracksList.isLoading)\r\n\r\n    useEffect(() => {\r\n        if (topTracks.length === 0) { // if url changes, save array of topTracks in state\r\n            dispatch(requestTopTracks())\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', showMoreTopTracks)\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', showMoreTopTracks)\r\n        }\r\n    }, [nexPageTopTracksList, isLoading])\r\n\r\n    const showMoreTopTracks = useCallback(() => { // tracks are added when scrolling ( because API pagination is broken )\r\n        if (window.pageYOffset > (document.documentElement.scrollHeight - document.documentElement.clientHeight - 50) && !isLoading && nexPageTopTracksList > 1) {\r\n            dispatch(requestMoreTopTracks(nexPageTopTracksList));\r\n        }\r\n    }, [isLoading, nexPageTopTracksList])\r\n\r\n    // I use key={id} because track.name, track.artist.name, track.mbid are repeated\r\n\r\n    return (\r\n        <div>\r\n            {topTracks.map((track, id) => \r\n                <div key={id}>\r\n                    <img src={track.image[1]['#text']} alt=\"\"/>\r\n                    {track.name} / {track.artist.name}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(TopTracksList);",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":16,"column":8,"nodeType":"43","endLine":16,"endColumn":10,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"45","line":24,"column":8,"nodeType":"43","endLine":24,"endColumn":41,"suggestions":"46"},{"ruleId":"41","severity":1,"message":"47","line":30,"column":8,"nodeType":"43","endLine":30,"endColumn":41,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'topTracks.length'. Either include them or remove the dependency array.","ArrayExpression",["51"],"React Hook useEffect has a missing dependency: 'showMoreTopTracks'. Either include it or remove the dependency array.",["52"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},"Update the dependencies array to be: [dispatch, topTracks.length]",{"range":"60","text":"61"},"Update the dependencies array to be: [nexPageTopTracksList, isLoading, showMoreTopTracks]",{"range":"62","text":"63"},"Update the dependencies array to be: [dispatch, isLoading, nexPageTopTracksList]",{"range":"64","text":"65"},[779,781],"[dispatch, topTracks.length]",[984,1017],"[nexPageTopTracksList, isLoading, showMoreTopTracks]",[1394,1427],"[dispatch, isLoading, nexPageTopTracksList]"]