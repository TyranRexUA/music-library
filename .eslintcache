[{"C:\\Projects\\music-library\\src\\index.tsx":"1","C:\\Projects\\music-library\\src\\reportWebVitals.ts":"2","C:\\Projects\\music-library\\src\\App.tsx":"3","C:\\Projects\\music-library\\src\\store\\store.ts":"4","C:\\Projects\\music-library\\src\\store\\topTracksListReducer.ts":"5","C:\\Projects\\music-library\\src\\API\\API.ts":"6","C:\\Projects\\music-library\\src\\components\\TopTracksList\\TopTracksList.tsx":"7","C:\\Projects\\music-library\\src\\store\\searchTracksListReducer.ts":"8","C:\\Projects\\music-library\\src\\components\\SearchTracksList\\SearchTracksList.tsx":"9","C:\\Projects\\music-library\\src\\components\\Card\\Card.tsx":"10","C:\\Projects\\music-library\\src\\store\\artistPageReducer.ts":"11","C:\\Projects\\music-library\\src\\components\\ArtistPage\\ArtistPage.tsx":"12","C:\\Projects\\music-library\\src\\secondaryFunction.ts":"13","C:\\Projects\\music-library\\src\\components\\Header\\Header.tsx":"14"},{"size":745,"mtime":1607259350111,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":934,"mtime":1607258096088,"results":"18","hashOfConfig":"16"},{"size":767,"mtime":1607255542607,"results":"19","hashOfConfig":"16"},{"size":2384,"mtime":1607251662075,"results":"20","hashOfConfig":"16"},{"size":2028,"mtime":1607259797822,"results":"21","hashOfConfig":"16"},{"size":1885,"mtime":1607257203596,"results":"22","hashOfConfig":"16"},{"size":2970,"mtime":1607252380310,"results":"23","hashOfConfig":"16"},{"size":3335,"mtime":1607261716101,"results":"24","hashOfConfig":"16"},{"size":736,"mtime":1607257422185,"results":"25","hashOfConfig":"16"},{"size":2120,"mtime":1607255542608,"results":"26","hashOfConfig":"16"},{"size":2370,"mtime":1607257938930,"results":"27","hashOfConfig":"16"},{"size":192,"mtime":1607255085113,"results":"28","hashOfConfig":"16"},{"size":1019,"mtime":1607257367636,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1p2olr6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Projects\\music-library\\src\\index.tsx",[],["61","62"],"C:\\Projects\\music-library\\src\\reportWebVitals.ts",[],"C:\\Projects\\music-library\\src\\App.tsx",[],"C:\\Projects\\music-library\\src\\store\\store.ts",[],"C:\\Projects\\music-library\\src\\store\\topTracksListReducer.ts",[],"C:\\Projects\\music-library\\src\\API\\API.ts",[],"C:\\Projects\\music-library\\src\\components\\TopTracksList\\TopTracksList.tsx",["63","64","65"],"import React, { memo, useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport { requestMoreTopTracks, requestTopTracks } from '../../store/topTracksListReducer';\r\nimport Card from '../Card/Card';\r\nimport s from './TopTracksList.module.scss'\r\n\r\nconst TopTracksList: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    let topTracks = useSelector((state: RootState) => state.topTracksList.tracks)\r\n    let nexPageTopTracksList = useSelector((state: RootState) => state.topTracksList.nextPage)\r\n    let isLoading = useSelector((state: RootState) => state.topTracksList.isLoading)\r\n\r\n    useEffect(() => {\r\n        if (topTracks.length === 0) { // if url changes, save array of topTracks in state\r\n            dispatch(requestTopTracks())\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', showMoreTopTracks)\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', showMoreTopTracks)\r\n        }\r\n    }, [nexPageTopTracksList, isLoading])\r\n\r\n    const showMoreTopTracks = useCallback(() => { // tracks are added when scrolling ( because API pagination is broken )\r\n        if (window.pageYOffset > (document.documentElement.scrollHeight - document.documentElement.clientHeight - 50) && !isLoading && nexPageTopTracksList > 1) {\r\n            dispatch(requestMoreTopTracks(nexPageTopTracksList));\r\n        }\r\n    }, [isLoading, nexPageTopTracksList])\r\n\r\n    // I use key={id} because track.name, track.artist.name, track.mbid are repeated\r\n\r\n    return (\r\n        <div className={s.List}>\r\n            {topTracks.map((track, id) => \r\n                <Card key={id} img={track.image[1]['#text']} name={track.name} artistName={track.artist.name} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(TopTracksList);","C:\\Projects\\music-library\\src\\store\\searchTracksListReducer.ts",[],"C:\\Projects\\music-library\\src\\components\\SearchTracksList\\SearchTracksList.tsx",["66","67","68","69"],"C:\\Projects\\music-library\\src\\components\\Card\\Card.tsx",[],"C:\\Projects\\music-library\\src\\store\\artistPageReducer.ts",[],"C:\\Projects\\music-library\\src\\components\\ArtistPage\\ArtistPage.tsx",["70"],"import React, { memo, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\r\nimport { cutText } from '../../secondaryFunction';\r\nimport { requestArtistInfo } from '../../store/artistPageReducer';\r\nimport { RootState } from '../../store/store';\r\nimport s from './ArtistPage.module.scss'\r\n\r\nconst ArtistPage: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    let artist = useSelector((state: RootState) => state.artistPage.artist)\r\n    let errorMessage = useSelector((state: RootState) => state.artistPage.errorMessage)\r\n    let history = useHistory()\r\n    let params = useParams<{ artistName?: string }>()\r\n\r\n    useEffect(() => { // if url '/artist/...' changes\r\n        if (params.artistName) {\r\n            dispatch(requestArtistInfo(params.artistName))\r\n        }\r\n    }, [params.artistName, history.location])\r\n\r\n    // we can get artist or error-message\r\n\r\n    if (errorMessage) {\r\n        return (\r\n            <div className={s.error}>\r\n                <span>\r\n                    {errorMessage}\r\n                </span>\r\n                <NavLink to='/'>\r\n                    To Main Page\r\n                </NavLink>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n\r\n            <div className={s.ArtistPage}>\r\n                <div className={s.ArtistPage__name}>\r\n                    {artist.name}\r\n                </div>\r\n\r\n                <div className={s.float}>\r\n                    {artist.image &&\r\n                        <img src={artist.image[3]['#text']} alt=\"\" />\r\n                    }\r\n\r\n                    {artist.bio && <div dangerouslySetInnerHTML={{ __html: cutText(artist.bio.content) }} />}\r\n                </div>\r\n\r\n                {artist.tags && artist.tags.tag.length > 0 &&\r\n                    <div className={s.ArtistPage__tags}>\r\n                        <div className={s.title}>\r\n                            TAGS:\r\n                            </div>\r\n\r\n                        {artist.tags.tag.map(tag =>\r\n                            <div className={s.name} key={tag.name}>\r\n                                {tag.name}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default memo(ArtistPage);","C:\\Projects\\music-library\\src\\secondaryFunction.ts",[],"C:\\Projects\\music-library\\src\\components\\Header\\Header.tsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":18,"column":8,"nodeType":"77","endLine":18,"endColumn":10,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":26,"column":8,"nodeType":"77","endLine":26,"endColumn":41,"suggestions":"80"},{"ruleId":"75","severity":1,"message":"81","line":32,"column":8,"nodeType":"77","endLine":32,"endColumn":41,"suggestions":"82"},{"ruleId":"75","severity":1,"message":"83","line":24,"column":8,"nodeType":"77","endLine":24,"endColumn":26,"suggestions":"84"},{"ruleId":"75","severity":1,"message":"85","line":32,"column":8,"nodeType":"77","endLine":32,"endColumn":37,"suggestions":"86"},{"ruleId":"75","severity":1,"message":"81","line":38,"column":8,"nodeType":"77","endLine":38,"endColumn":51,"suggestions":"87"},{"ruleId":"75","severity":1,"message":"88","line":47,"column":8,"nodeType":"77","endLine":47,"endColumn":21,"suggestions":"89"},{"ruleId":"75","severity":1,"message":"90","line":20,"column":8,"nodeType":"77","endLine":20,"endColumn":45,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'topTracks.length'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a missing dependency: 'showMoreTopTracks'. Either include it or remove the dependency array.",["95"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["96"],"React Hook useEffect has missing dependencies: 'dispatch' and 'params.searchValue'. Either include them or remove the dependency array.",["97"],"React Hook useEffect has a missing dependency: 'showMoreSearchTracks'. Either include it or remove the dependency array.",["98"],["99"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["100"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [dispatch, topTracks.length]",{"range":"118","text":"119"},"Update the dependencies array to be: [nexPageTopTracksList, isLoading, showMoreTopTracks]",{"range":"120","text":"121"},"Update the dependencies array to be: [dispatch, isLoading, nexPageTopTracksList]",{"range":"122","text":"123"},"Update the dependencies array to be: [dispatch, history.location, params.searchValue]",{"range":"124","text":"125"},"Update the dependencies array to be: [nexPageTopTracks, isLoading, showMoreSearchTracks]",{"range":"126","text":"127"},"Update the dependencies array to be: [dispatch, isLoading, nexPageTopTracks, searchSubmit]",{"range":"128","text":"129"},"Update the dependencies array to be: [history, searchValue]",{"range":"130","text":"131"},"Update the dependencies array to be: [params.artistName, history.location, dispatch]",{"range":"132","text":"133"},[858,860],"[dispatch, topTracks.length]",[1063,1096],"[nexPageTopTracksList, isLoading, showMoreTopTracks]",[1473,1506],"[dispatch, isLoading, nexPageTopTracksList]",[1274,1292],"[dispatch, history.location, params.searchValue]",[1501,1530],"[nexPageTopTracks, isLoading, showMoreSearchTracks]",[1919,1962],"[dispatch, isLoading, nexPageTopTracks, searchSubmit]",[2223,2236],"[history, searchValue]",[882,919],"[params.artistName, history.location, dispatch]"]